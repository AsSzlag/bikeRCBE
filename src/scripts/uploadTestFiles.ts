import { firebaseStorageService } from '../services/firebaseStorageService.js';
import dotenv from 'dotenv';

dotenv.config();

async function uploadTestFiles() {
  console.log('📁 Uploading test files to Google Cloud Storage bucket...');
  console.log(`📦 Bucket: ${process.env.STORAGE_BUCKET_NAME || 'default Firebase bucket'}`);
  
  const testJobId = 'test-job-' + Date.now();
  console.log(`🆔 Test Job ID: ${testJobId}`);
  
  try {
    // Test file 1: CSV file (simulating measurement data)
    const csvContent = `timestamp,angle_x,angle_y,angle_z
2024-01-01T10:00:00Z,15.2,23.1,8.7
2024-01-01T10:00:01Z,15.3,23.0,8.8
2024-01-01T10:00:02Z,15.1,23.2,8.6
2024-01-01T10:00:03Z,15.4,22.9,8.9
2024-01-01T10:00:04Z,15.0,23.3,8.5`;
    
    console.log('📤 Uploading CSV file...');
    const csvResult = await firebaseStorageService.uploadFile(
      Buffer.from(csvContent, 'utf8'),
      testJobId,
      'measurement_angles.csv',
      'text/csv'
    );
    console.log('✅ CSV uploaded:', {
      filename: csvResult.filename,
      size: csvResult.size,
      path: csvResult.path
    });
    
    // Test file 2: JSON file (simulating job metadata)
    const jsonContent = JSON.stringify({
      job_id: testJobId,
      client_name: "Test Client",
      bike_model: "Trek 2024",
      measurement_type: "angle_analysis",
      created_at: new Date().toISOString(),
      status: "completed",
      results: {
        average_angle_x: 15.2,
        average_angle_y: 23.1,
        average_angle_z: 8.7,
        max_deviation: 0.4
      }
    }, null, 2);
    
    console.log('📤 Uploading JSON file...');
    const jsonResult = await firebaseStorageService.uploadFile(
      Buffer.from(jsonContent, 'utf8'),
      testJobId,
      'job_metadata.json',
      'application/json'
    );
    console.log('✅ JSON uploaded:', {
      filename: jsonResult.filename,
      size: jsonResult.size,
      path: jsonResult.path
    });
    
    // Test file 3: Text file (simulating analysis report)
    const reportContent = `BikeRC Analysis Report
========================

Job ID: ${testJobId}
Client: Test Client
Bike Model: Trek 2024
Analysis Date: ${new Date().toLocaleDateString()}

MEASUREMENT SUMMARY:
- Total measurements: 5
- Average X angle: 15.2°
- Average Y angle: 23.1°
- Average Z angle: 8.7°
- Maximum deviation: 0.4°

RECOMMENDATIONS:
1. Bike geometry appears to be within normal parameters
2. No significant alignment issues detected
3. Regular maintenance recommended

Generated by BikeRC Analysis System`;

    console.log('📤 Uploading report file...');
    const reportResult = await firebaseStorageService.uploadFile(
      Buffer.from(reportContent, 'utf8'),
      testJobId,
      'analysis_report.txt',
      'text/plain'
    );
    console.log('✅ Report uploaded:', {
      filename: reportResult.filename,
      size: reportResult.size,
      path: reportResult.path
    });
    
    // List all files for the test job
    console.log('\n📋 Listing all files for test job...');
    const allFiles = await firebaseStorageService.listJobFiles(testJobId);
    console.log(`✅ Found ${allFiles.length} files:`);
    allFiles.forEach((file, index) => {
      console.log(`  ${index + 1}. ${file.filename} (${file.size} bytes)`);
      console.log(`     Path: ${file.path}`);
      console.log(`     Type: ${file.mimeType}`);
      console.log(`     Uploaded: ${file.uploadedAt.toLocaleString()}`);
      console.log(`     Download URL: ${file.downloadUrl.substring(0, 80)}...`);
      console.log('');
    });
    
    // Test downloading one file
    console.log('📥 Testing file download...');
    const downloadedContent = await firebaseStorageService.downloadFile(testJobId, 'job_metadata.json');
    const parsedJson = JSON.parse(downloadedContent.toString('utf8'));
    console.log('✅ Download successful!');
    console.log('📄 Downloaded JSON content:', {
      job_id: parsedJson.job_id,
      client_name: parsedJson.client_name,
      bike_model: parsedJson.bike_model,
      status: parsedJson.status
    });
    
    console.log('\n🎉 All test files uploaded successfully!');
    console.log(`📁 Files are stored in bucket under: jobs/${testJobId}/`);
    console.log('🔗 You can access them via the download URLs shown above');
    
    // Ask if user wants to clean up
    console.log('\n💡 To clean up these test files, run:');
    console.log(`   npm run cleanup-test-files ${testJobId}`);
    
  } catch (error) {
    console.error('❌ Error uploading test files:', error);
    console.error('\n🔧 Troubleshooting tips:');
    console.error('1. Check your .env file has correct Firebase credentials');
    console.error('2. Verify your Firebase service account has Storage permissions');
    console.error('3. Ensure the bucket exists and is accessible');
  }
}

// Run the test
uploadTestFiles().then(() => {
  console.log('\n✨ Test file upload completed');
  process.exit(0);
}).catch((error) => {
  console.error('💥 Test file upload crashed:', error);
  process.exit(1);
});
